name: Testing

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry==1.8.3
    
    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}-dev
        restore-keys: |
          venv-${{ runner.os }}-${{ matrix.python-version }}-
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --with dev
    
    - name: Black
      run: |
        poetry run black --check --diff .
    
    - name: ISort
      run: |
        poetry run isort --check-only --diff tests/ tracker/

    - name: Tests with coverage
      run: |
        poetry run coverage run -m pytest -v --tb=short tests
        poetry run coverage report -m --fail-under=100